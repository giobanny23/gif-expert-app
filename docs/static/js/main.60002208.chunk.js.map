{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFectchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAsB5C,OAEQ,0BAAMC,SAfO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAWd,2BACIO,KAAM,OACNC,MAAST,EACTU,SAvBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,kDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAa,SAAC,GAAqB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAOV,EAAQ,EAARA,IAIpC,OACI,yBAAKc,UAAU,QACR,yBAAKC,IAAMf,EAAMgB,IAAMN,IACtB,+BAAMA,KCJTO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAAEA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBvC,OAbCC,qBAAW,WACRxB,EAASC,GACPwB,MAAM,SAAAC,GACHC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAET,CAAEpB,IAEGqB,EDd0BQ,CAAc7B,GAAjCa,EAHsB,EAG3BN,KAAaa,EAHc,EAGdA,QAGrB,OAEI,oCACI,gCAAOpB,EAAP,KAEFoB,GAAW,uCAET,yBAAKJ,UAAU,aAGHH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACIoB,IAAOpB,EAAIC,IACND,UEpBpBqB,EAAc,WAAK,MAKO7C,mBAAS,CAAC,cALjB,mBAKtB8C,EALsB,KAKV/C,EALU,KAY5B,OACI,oCACI,gEACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEI+C,EAAWvB,KAAK,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACI8B,IAAM9B,EACNA,SAAUA,U,MCnB9BiC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.60002208.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\n\nexport const AddCategory = ({setCategories}) => {\n\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('');\n        }\n\n    }\n\n\n\n\n    return (\n       \n            <form onSubmit={handleSubmit}>\n            <input\n                type =\"text\"\n                value = {inputValue}\n                onChange ={ handleInputChange }\n            \n            />\n                \n            </form>\n        \n    )\n}\n","\n\n\nexport const getGifs = async( category) => {  \n\n    const url =`https://api.giphy.com/v1/gifs/search?q= ${ encodeURI(category) }&limit=10&api_key=Zxnme4AmQGcmkgr7lTTO7tzn5gxjZMi2`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return{\n            id:img.id,\n            title:img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    })\n    return gifs;\n\n   }\n \n","import React from 'react';\n\nexport const GifGridItem =({ id, title, url}) =>{\n\n    //console.log(id,title, url);\n\n    return(\n        <div className=\"card\">\n               <img src={ url } alt={ title } />\n                <p> { title }</p> \n\n        </div>\n    )\n\n}","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFectchGifs'\n\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n    const { data:images, loading }= useFetchGifs( category );\n\n\n    return (\n\n        <>\n            <h3> { category } </h3> \n            \n        { loading && <p> Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                    {\n                        images.map( img =>(\n                        <GifGridItem \n                            key= { img.id }\n                            { ...img}\n                        />\n                        ))\n                    }     \n                    \n                \n            </div>\n        </>\n    )\n}\n\n\n","import { useState, useEffect } from \"react\"\nimport { getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs =( category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading:true\n    });\n    useEffect (() =>{ \n       getGifs( category)\n        .then( imgs => {\n            setTimeout(() =>{\n                console.log(imgs)\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            },3000);\n        })\n   },[ category])\n\n   return state; // {dara:[], loading: true};\n  \n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp =() =>{\n\n    //const categories = ['One Punch','SAmurai x', 'Dragon Ball'];\n    //Comentarios\n    \n   const [categories, setCategories] = useState(['One Punch']);\n\n   //const handleAdd = () =>{\n       //setCategories ([ 'HunterXHunter'...categories]);\n      // setcategories(cats => [...cats, 'HunterXHunter']);\n   //} \n\n    return (\n        <>\n            <h2>GifExpertApp Creado por Giobanny</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>  \n            \n            <ol>\n            {\n                categories.map( category => (\n                <GifGrid \n                    key ={category}\n                    category={category } />\n            ))\n            } \n            </ol>        \n        </>\n    )    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}